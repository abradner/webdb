%pre
  :preserve
    regex characters:

    .          any character except newline
    [ ]        any single character of set
    [^ ]       any single character NOT of set
    *          0 or more previous regular expression
    *?         0 or more previous regular expression(non greedy)
    +          1 or more previous regular expression
    +?         1 or more previous regular expression(non greedy)
    ?          0 or 1 previous regular expression
    |          alternation
    ( )        grouping regular expressions
    ^          beginning of a line or string
    $          end of a line or string
    {m,n}      at least m but most n previous regular expression
    {m,n}?     at least m but most n previous regular expression(non greedy)
    \A         beginning of a string
    \b         backspace(0x08)(inside[]only)
    \B         non-word boundary
    \b         word boundary(outside[]only)
    \d         digit, same as[0-9]
    \D         non-digit
    \S         non-whitespace character
    \s         whitespace character[ \t\n\r\f]
    \W         non-word character
    \w         word character[0-9A-Za-z_]
    \xHH       hexadecimal char (encoded byte value)
    \z         end of a string
    \Z         end of a string, or before newline at the end
    (?# )      comment
    (?: )      grouping without backreferences
    (?= )      zero-width positive look-ahead assertion
    (?! )      zero-width negative look-ahead assertion
    (?&lt;= )     zero-width positive look-behind assertion
    (?&lt;! )     zero-width negative look-behind assertion
    (?ix-ix)   turns on/off i/x options, localized in group if any.
    (?ix-ix: ) turns on/off i/x options, localized in non-capturing group.

    special character classes:

    [:alnum:]   alpha-numeric characters
    [:alpha:]   alphabetic characters
    [:blank:]   whitespace - does not include tabs, carriage returns, etc
    [:cntrl:]   control characters
    [:digit:]   decimal digits
    [:graph:]   graph characters
    [:lower:]   lower case characters
    [:print:]   printable characters
    [:punct:]   punctuation characters
    [:space:]   whitespace, including tabs, carriage returns, etc
    [:upper:]   upper case characters
    [:xdigit:]  hexadecimal digits

    options:

    /i         case insensitive
    /o         only interpolate \#{} blocks once
    /m         multiline mode - '.' will match newline
    /x         extended mode - whitespace is ignored
    /[neus]    encoding: none, EUC, UTF-8, SJIS, respectively

    examples:

    [a-z]*

%p online regex checker #{link_to "Rubular Expressions", "http://www.rubular.com/", :target => "_blank"}
%p thanks to #{link_to 'http://www.zenspider.com/Languages/Ruby/QuickRef.html#11','http://www.zenspider.com/Languages/Ruby/QuickRef.html#11',  :target => "_blank"}